{{- if .Values.geth.enabled }}
{{- if .Values.geth.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: internal-and-public
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/client-max-body-size: "500M"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "15m"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    {{- if .Values.geth.ingress.tls.enabled }}
    cert-manager.io/cluster-issuer: "zerossl-prod"
    {{- end }}
  name: {{ .Release.Name }}-geth-ingress
spec:
  rules:
    - host: {{ pluck $.Values.global.env .Values.geth.ingress.host | first | default .Values.geth.ingress.host._default | quote }}
      http:
        paths:
          - path: "/http(/|$)(.*)"
            pathType: Prefix
            backend:
              service:
                name: geth-svc
                port:
                  number: {{ .Values.geth.ports.http.number }}
          - path: /ws(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: geth-svc
                port:
                  number: {{ .Values.geth.ports.ws.number }}
          # - path: /discovery(/|$)(.*)
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: node-svc
          #       port:
          #         number: {{ .Values.node.portDiscovery }}
  {{- if .Values.geth.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ pluck $.Values.global.env .Values.geth.ingress.host | first | default .Values.geth.ingress.host._default | quote }}
      {{- if .Values.geth.ingress.tls.createSecret }}
      secretName: {{ .Release.Name }}-geth-tls
      {{- end }}
  {{- end }}
{{- end }}
---
{{- if .Values.geth.client.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: internal-and-public
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/client-max-body-size: "500M"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "15m"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    {{- if .Values.geth.client.ingress.tls.enabled }}
    cert-manager.io/cluster-issuer: "zerossl-prod"
    {{- end }}
  name: {{ .Release.Name }}-client-ingress
spec:
  rules:
    - host: {{ pluck $.Values.global.env .Values.geth.client.ingress.host | first | default .Values.geth.client.ingress.host._default | quote }}
      http:
        paths:
          - path: "/http(/|$)(.*)"
            pathType: Prefix
            backend:
              service:
                name: client-svc
                port:
                  number: {{ .Values.geth.portHttp }}
          - path: /ws(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: client-svc
                port:
                  number: {{ .Values.geth.portWs }}
  {{- if .Values.geth.client.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ pluck $.Values.global.env .Values.geth.client.ingress.host | first | default .Values.geth.client.ingress.host._default | quote }}
      {{- if .Values.geth.ingress.tls.createSecret }}
      secretName: {{ .Release.Name }}-client-tls
      {{- end }}
  {{- end }}
{{- end }}
{{- end }}
