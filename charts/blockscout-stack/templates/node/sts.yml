{{- if .Values.node.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-geth
spec:
  serviceName: {{ .Release.Name }}-geth
  replicas: {{ .Values.node.replicas.app }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-geth
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-geth
    spec:
      containers:
      - name: {{ .Release.Name }}-geth
        image: {{ .Values.node.image }}
        args: {{ .Values.node.command }}
        # args: [ "--http", "--http.addr=0.0.0.0", "--http.vhosts=geth-mainnet-full", "--http.api=eth,net,web3,txpool", "--ws", "--ws.addr=0.0.0.0", "--datadir=/data", ]
        resources:
        {{- with .Values.node.resources }}
          limits:
            memory: {{ pluck $.Values.global.env .limits.memory | first | default .limits.memory._default | quote }}
            cpu: {{ pluck $.Values.global.env .limits.cpu | first | default .limits.cpu._default | quote }}
          requests:
            memory: {{ pluck $.Values.global.env .requests.memory | first | default .requests.memory._default | quote }}
            cpu: {{ pluck $.Values.global.env .requests.cpu | first | default .requests.cpu._default | quote }}
        {{- end }}
        env:
{{- include "node_env" . | indent 10 }}
        ports:
        - containerPort: {{ .Values.node.portHttp }}
          name: gethrpchttp
        - containerPort: {{ .Values.node.portWs }}
          name: gethrpctcp
        - containerPort: {{ .Values.node.portDiscovery }}
          name: gethdiscovery
        volumeMounts:
        - name: data
          mountPath: "/data"
      {{- if .Values.node.nodeSelector.enabled }}
      nodeSelector:
        app: {{ .Values.node.nodeSelector.app}}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        # storageClassName: gp2
        resources:
          requests:
            storage: 1000Gi
---
{{- end }}
