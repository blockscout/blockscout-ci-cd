{{- if .Values.allowance.enabled }}
{{- if .Values.allowance.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: internal-and-public
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    nginx.ingress.kubernetes.io/client-max-body-size: "500M"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "15m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "15m"
    cert-manager.io/cluster-issuer: "zerossl-prod"
    {{- range .Values.allowance.ingress.annotations }}
    {{ . }}
    {{- end}}
  name: {{ .Release.Name }}-allowance-ingress
spec:
  rules:
    - host: {{ pluck $.Values.global.env .Values.allowance.ingress.host | first | default .Values.allowance.ingress.host._default | quote }}
      http:
        paths:
        {{- range .Values.allowance.ingress.path.exact }}
          - path: {{ . }}
            pathType: Exact
            backend:
              service:
                name: {{ $.Release.Name }}-allowance-svc
                port:
                  number: {{ $.Values.allowance.docker.port }}
        {{- end}}
        {{- range .Values.allowance.ingress.path.prefix }}
          - path: {{ . }}
            pathType: Prefix
            backend:
              service:
                name: {{ $.Release.Name }}-allowance-svc
                port:
                  number: {{ $.Values.allowance.docker.port }}
        {{- end}}
  tls:
    - hosts:
        - {{ pluck $.Values.global.env .Values.allowance.ingress.host | first | default .Values.allowance.ingress.host._default | quote }}
      {{- if .Values.allowance.ingress.tls.createSecret }}
      secretName: {{ .Release.Name }}-{{ .Values.allowance.app }}-tls
      {{- end }}
{{- end }}
{{- end }}
