{{- if .Values.stats.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-stats
  # annotations:
  #   prometheus.io/scrape: "true"
  #   prometheus.io/port: "http-metrics"
spec:
  replicas: {{ .Values.stats.replicas.app }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-stats
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-stats
    spec:
      # serviceAccountName: vault-auth
      containers:
        - name: {{ .Release.Name }}-stats
          image: {{ pluck $.Values.global.env .Values.stats.image | first | default .Values.stats.image._default | quote }}
          resources:
          {{- with .Values.stats.resources }}
            limits:
              memory: {{ pluck $.Values.global.env .limits.memory | first | default .limits.memory._default | quote }}
              cpu: {{ pluck $.Values.global.env .limits.cpu | first | default .limits.cpu._default | quote }}
            requests:
              memory: {{ pluck $.Values.global.env .requests.memory | first | default .requests.memory._default | quote }}
              cpu: {{ pluck $.Values.global.env .requests.cpu | first | default .requests.cpu._default | quote }}
          {{- end }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.stats.docker.targetPort }}
            - containerPort: {{ .Values.stats.docker.metricsPort }}
              name: http-metrics
          env:
# {{- include "stats_env" . | indent 10 }}
          # volumeMounts:
          #   - name: {{ .Release.Name }}-logs
          #     mountPath: /usr/local/gkretail/sm-web-server/log
          {{- if .Values.stats.livenessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.stats.livenessProbe.path }}
              port: {{ .Values.stats.docker.targetPort }}
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
          {{- end }}
          {{- if .Values.stats.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.stats.livenessProbe.path }}
              port: {{ .Values.stats.docker.targetPort }}
              scheme: HTTP
            initialDelaySeconds: 100
            periodSeconds: 100
          {{- end }}
      # volumes:
      #   - name: {{ .Release.Name }}-logs
      #     emptyDir: { }
      #   - name: config
      #     configMap:
      #       name: {{ .Release.Name }}-promtail-configmap
      restartPolicy: Always
      {{- if .Values.stats.nodeSelector.enabled }}
      nodeSelector:
        app: {{ .Values.stats.nodeSelector.app}}
      {{- end }}
---
{{- end}}
