global:
  env: e2e
# enable Blockscout deploy
blockscout:
  enabled: true
  image:
    _default: blockscout/blockscout:latest
  replicas:
    app: 1
  docker:
    port: 80
    targetPort: 4000
  service:
    # ClusterIP, NodePort or LoadBalancer
    type: ClusterIP
  # enable ingress
  ingress:
    enabled: true
    host:
      _default: blockscout.test.blockscout.aws-k8s.blockscout.com
      testnet: asdfg-blockscout.test.blockscout.aws-k8s.blockscout.com
    # enable https
    tls:
      enabled: true
  # probes
  livenessProbe:
    enabled: true
    path: /
  readinessProbe:
    enabled: true
    path: /
  resources:
    limits:
      memory:
        _default: "1Gi"
      cpu:
        _default: "2"
    requests:
      memory:
        _default: "1Gi"
      cpu:
        _default: "2"
  # enable service to connect to RDS
  rds:
    enable: false
    endpoint:
      _default: <endpoint>.<region>.rds.amazonaws.com
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  # Blockscout environment variables
  environment:
    ENV:
      _default: test
    RESOURCE_MODE:
      _default: account
    PUBLIC:
      _default: 'false'
    PORT:
      _default: 4000
    PORT_PG:
      _default: 5432
    PORT_NETWORK_HTTP:
      _default: 8545
    PORT_NETWORK_WS:
      _default: 8546
    ETHEREUM_JSONRPC_VARIANT:
      _default: geth
    ETHEREUM_JSONRPC_TRACE_URL:
      _default: http://geth-svc:8545
    ETHEREUM_JSONRPC_HTTP_URL:
      _default: http://geth-svc:8545
    ETHEREUM_JSONRPC_WS_URL:
      _default: ws://geth-svc:8546
    COIN:
      _default: DAI
    MIX_ENV:
      _default: prod
    ECTO_USE_SSL:
      _default: 'false'
    RUST_VERIFICATION_SERVICE_URL:
      _default: http://sc-verifier-svc:8043
    ACCOUNT_ENABLED:
      _default: true
    DISABLE_REALTIME_INDEXER:
      _default: 'false'
    SOCKET_ROOT:
      _default: "/"
    NETWORK_PATH:
      _default: "/"
    ETHEREUM_JSONRPC_DISABLE_ARCHIVE_BALANCES:
      _default: 'true'

postgres:
  enabled: true
  image: postgres:13.8
  port: 5432

  command: '["docker-entrypoint.sh", "-c"]'
  args: '["max_connections=300"]'

  resources:
    limits:
      memory:
        _default: "1Gi"
      cpu:
        _default: "1"
    requests:
      memory:
        _default: "1Gi"
      cpu:
        _default: "1"

  environment:
    POSTGRES_USER:
      _default: 'postgres'
    POSTGRES_HOST_AUTH_METHOD:
      _default: 'trust'
# enable geth deploy
geth:
  enabled: true
  image:
    _default: ethereum/client-go:stable
  replicas:
    app: 1
  portHttp: 8545
  portWs: 8546
  portAuth: 8551
  command: '["sh","./root/init.sh"]'
  args: '["--fakepow", "--dev", "--dev.period=1", "--datadir=/root/.ethereum/devnet", "--keystore=/root/.ethereum/devnet/keystore", "--password=/root/password.txt", "--unlock=0", "--unlock=1", "--mine", "--miner.threads=1", "--miner.etherbase=0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266", "--ipcpath=/root/geth.ipc", "--http", "--http.vhosts=*", "--http.addr=0.0.0.0", "--http.port=8545", "--http.api=eth,net,web3,debug,txpool", "--ws", "--ws.origins=*", "--ws.addr=0.0.0.0", "--ws.port=8546", "--ws.api=eth,net,web3,debug,txpool", "--graphql", "--graphql.corsdomain=*", "--allow-insecure-unlock", "--rpc.allow-unprotected-txs", "--http.corsdomain=*", "--vmdebug", "--networkid=1337", "--rpc.txfeecap=0"]'
  environment: {}
  persistence:
    enabled: false
  resources:
    limits:
      memory:
        _default: "2Gi"
      cpu:
        _default: "0.2"
    requests:
      memory:
        _default: "2Gi"
      cpu:
        _default: "0.2"
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  service:
    # ClusterIP, NodePort or LoadBalancer
    type: ClusterIP
  # enable ingress
  ingress:
    enabled: true
    host:
      _default: asdfg-node.test.blockscout.aws-k8s.blockscout.com
    # enable https
    tls:
      enabled: false
  jwt:
    enabled: false
  files:
    enabled: true
# enable Smart-contract-verifier deploy
scVerifier:
  enabled: true
  image:
    _default: ghcr.io/blockscout/smart-contract-verifier:latest
  replicas:
    app: 1
  docker:
    port: 80
    targetPort: 8043
    metricsPort: 6060
  service:
    # ClusterIP, NodePort or LoadBalancer
    type: ClusterIP
  # enable ingress
  ingress:
    enabled: true
    host:
      _default: verifier.test.blockscout.aws-k8s.blockscout.com
      testnet: asdfg-verifier.test.blockscout.aws-k8s.blockscout.com
    # enable https
    tls:
      enabled: true
  resources:
    limits:
      memory:
        _default: "0.5Gi"
      cpu:
        _default: "0.25"
    requests:
      memory:
        _default: "0.5Gi"
      cpu:
        _default: "0.25"
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  # probes
  livenessProbe:
    enabled: true
    path: /health
  readinessProbe:
    enabled: true
    path: /health
  # enable Horizontal Pod Autoscaler
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    cpuTarget: 90
  environment:
    SMART_CONTRACT_VERIFIER__SERVER__ADDR:
      _default: 0.0.0.0:8043
    # SMART_CONTRACT_VERIFIER__SOLIDITY__ENABLED:
    #   _default: 'true'
    SMART_CONTRACT_VERIFIER__SOLIDITY__COMPILERS_DIR:
      _default: /tmp/solidity-compilers
    SMART_CONTRACT_VERIFIER__SOLIDITY__REFRESH_VERSIONS_SCHEDULE:
      _default: 0 0 * * * * *
    # It depends on the OS you are running the service on
    # SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL:
    #   _default: https://solc-bin.ethereum.org/linux-amd64/list.json
    #SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL=https://solc-bin.ethereum.org/macosx-amd64/list.json
    #SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__LIST__LIST_URL=https://solc-bin.ethereum.org/windows-amd64/list.json
    SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__S3__REGION:
      _default: ""
    SMART_CONTRACT_VERIFIER__SOLIDITY__FETCHER__S3__ENDPOINT:
      _default: https://storage.googleapis.com
    SMART_CONTRACT_VERIFIER__SOURCIFY__ENABLED:
      _default: 'true'
    SMART_CONTRACT_VERIFIER__SOURCIFY__API_URL:
      _default: https://sourcify.dev/server/
    SMART_CONTRACT_VERIFIER__SOURCIFY__VERIFICATION_ATTEMPTS:
      _default: 3
    SMART_CONTRACT_VERIFIER__SOURCIFY__REQUEST_TIMEOUT:
      _default: 10
    SMART_CONTRACT_VERIFIER__METRICS__ENABLED:
      _default: 'true'
    SMART_CONTRACT_VERIFIER__METRICS__ADDR:
      _default: 0.0.0.0:6060
    SMART_CONTRACT_VERIFIER__METRICS__ROUTE:
      _default: /metrics
    SMART_CONTRACT_VERIFIER__JAEGER__ENABLED:
      _default: 'false'
frontend:
  enabled: true
  image:
    _default: ghcr.io/blockscout/frontend:prerelease-5ca79e55
  replicas:
    app: 1
  docker:
    port: 80
    targetPort: 3000
  ingress:
    enabled: true
    host:
      _default: frontend.test.blockscout.aws-k8s.blockscout.com
      testnet: asdfg-frontend.test.blockscout.aws-k8s.blockscout.com
    # enable https
    tls:
      enabled: true
  resources:
    limits:
      memory:
        _default: "0.3Gi"
      cpu:
        _default: "0.2"
    requests:
      memory:
        _default: "0.3Gi"
      cpu:
        _default: "0.2"
  # node label
  nodeSelector:
    enabled: true
    app: blockscout
  environment:
    NEXT_PUBLIC_APP_PROTOCOL:
      _default: http
    NEXT_PUBLIC_APP_HOST:
      _default: localhost
    NEXT_PUBLIC_APP_PORT:
      _default: 3000
    NEXT_PUBLIC_BLOCKSCOUT_VERSION:
      _default: v4.1.7-beta
    NEXT_PUBLIC_FOOTER_GITHUB_LINK:
      _default: https://github.com/blockscout/blockscout
    NEXT_PUBLIC_FOOTER_TWITTER_LINK:
      _default: https://www.twitter.com/blockscoutcom
    NEXT_PUBLIC_APP_INSTANCE:
      _default: local
    NEXT_PUBLIC_FOOTER_TELEGRAM_LINK:
      _default: https://t.me/poa_network
    NEXT_PUBLIC_FOOTER_STAKING_LINK:
      _default: https://duneanalytics.com/maxaleks/xdai-staking
    NEXT_PUBLIC_NETWORK_NAME:
      _default: POA
    NEXT_PUBLIC_NETWORK_SHORT_NAME:
      _default: POA
    NEXT_PUBLIC_NETWORK_ASSETS_PATHNAME:
      _default: poa
    NEXT_PUBLIC_NETWORK_TYPE:
      _default: poa
    NEXT_PUBLIC_NETWORK_SUBTYPE:
      _default: core
    NEXT_PUBLIC_NETWORK_ID:
      _default: 99
    NEXT_PUBLIC_NETWORK_CURRENCY:
      _default: POA
    NEXT_PUBLIC_IS_ACCOUNT_SUPPORTED:
      _default: 'true'
    NEXT_PUBLIC_FEATURED_NETWORKS:
      _default: "[{'title':'Gnosis Chain','basePath':'/xdai/mainnet','group':'mainnets'},{'title':'Optimism on Gnosis Chain','basePath':'/xdai/optimism','group':'mainnets','icon':'https://www.fillmurray.com/60/60'},{'title':'Arbitrum on xDai','basePath':'/xdai/aox','group':'mainnets'},{'title':'Ethereum','basePath':'/eth/mainnet','group':'mainnets'},{'title':'Ethereum Classic','basePath':'/etx/mainnet','group':'mainnets'},{'title':'POA','basePath':'/poa/core','group':'mainnets'},{'title':'RSK','basePath':'/rsk/mainnet','group':'mainnets'},{'title':'Gnosis Chain Testnet','basePath':'/xdai/testnet','group':'testnets'},{'title':'POA Sokol','basePath':'/poa/sokol','group':'testnets'},{'title':'ARTIS Î£1','basePath':'/artis/sigma1','group':'other'},{'title':'LUKSO L14','basePath':'/lukso/l14','group':'other'},{'title':'Astar','basePath':'/astar','group':'other'}]"
    NEXT_PUBLIC_API_ENDPOINT:
      _default: https://blockscout.com
    NEXT_PUBLIC_API_BASE_PATH: /
