// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`E2E mode Chaos mode ( stateful set ) 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "type": "blockscout-e2e-test",
      },
      "name": "",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "service",
      "namespace": "",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 80,
          "targetPort": 80,
        },
      ],
      "selector": Object {
        "app": "blockscout-e2e",
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "genesis.json": "{
                    \\"config\\": {
                      \\"chainId\\": 1337,
                      \\"homesteadBlock\\": 0,
                      \\"eip150Block\\": 0,
                      \\"eip155Block\\": 0,
                      \\"eip158Block\\": 0,
                      \\"eip160Block\\": 0,
                      \\"byzantiumBlock\\": 0,
                      \\"constantinopleBlock\\": 0,
                      \\"petersburgBlock\\": 0,
                      \\"istanbulBlock\\": 0,
                      \\"muirGlacierBlock\\": 0,
                      \\"berlinBlock\\": 0,
                      \\"londonBlock\\": 0,
                      \\"clique\\":{
                        \\"blockperiodseconds\\": 1,
                        \\"epochlength\\":30000
                      }
                    },
                    \\"nonce\\": \\"0x0000000000000042\\",
                    \\"mixhash\\": \\"0x0000000000000000000000000000000000000000000000000000000000000000\\",
                    \\"difficulty\\": \\"1\\",
                    \\"coinbase\\": \\"0x3333333333333333333333333333333333333333\\",
                    \\"parentHash\\": \\"0x0000000000000000000000000000000000000000000000000000000000000000\\",
                    \\"extraData\\": \\"0x\\",
                    \\"gasLimit\\": \\"8000000000\\",
                    \\"alloc\\": {
                        \\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\\": { \\"balance\\": \\"20000000000000000000000\\" },
                        \\"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\\": { \\"balance\\": \\"20000000000000000000000\\" }
                    }
                  }",
      "init.sh": "#!/bin/bash
                echo \\"/root/.ethereum/keystore not found, running 'geth init'...\\"
                rm -rf /root/.ethereum/keystore
                echo ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 >> priv1.txt
                echo 59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d >> priv2.txt
                geth account import --keystore /root/.ethereum/devnet/keystore --password /root/password.txt ./priv1.txt
                geth account import --keystore /root/.ethereum/devnet/keystore --password /root/password.txt ./priv2.txt
                geth --datadir /root/.ethereum/devnet init /root/genesis.json
                echo \\"...done!\\"
            
                geth \\"$@\\"
                ",
      "password.txt": "",
    },
    "immutable": false,
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "test-geth-cm-c84725b6",
      "namespace": "",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "blockscout",
      },
      "name": "deployment",
      "namespace": "",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app": "blockscout-e2e",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "blockscout-e2e",
          },
          "name": "pod",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--fakepow",
                "--dev",
                "--dev.period",
                "1",
                "--datadir",
                "/root/.ethereum/devnet",
                "--keystore",
                "/root/.ethereum/devnet/keystore",
                "--password",
                "/root/password.txt",
                "--unlock",
                "0",
                "--unlock",
                "1",
                "--mine",
                "--miner.threads",
                "1",
                "--miner.etherbase",
                "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266",
                "--ipcpath",
                "/root/geth.ipc",
                "--http",
                "--http.vhosts",
                "*",
                "--http.addr",
                "0.0.0.0",
                "--http.port=8544",
                "--http.api",
                "eth,net,web3,debug,txpool",
                "--ws",
                "--ws.origins",
                "*",
                "--ws.addr",
                "0.0.0.0",
                "--ws.port=8546",
                "--ws.api",
                "eth,net,web3,debug,txpool",
                "--graphql",
                "--graphql.corsdomain",
                "*",
                "--allow-insecure-unlock",
                "--rpc.allow-unprotected-txs",
                "--http.corsdomain",
                "*",
                "--vmdebug",
                "--networkid=1337",
                "--rpc.txfeecap",
                "0",
              ],
              "command": Array [
                "sh",
                "./root/init.sh",
              ],
              "image": "ethereum/client-go:v1.10.18",
              "name": "geth",
              "ports": Array [
                Object {
                  "containerPort": 8544,
                  "name": "http",
                },
                Object {
                  "containerPort": 8546,
                  "name": "ws",
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "2Gi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "2Gi",
                },
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/root/init.sh",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "init.sh",
                },
                Object {
                  "mountPath": "/root/genesis.json",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "genesis.json",
                },
                Object {
                  "mountPath": "/root/password.txt",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "password.txt",
                },
              ],
            },
            Object {
              "args": Array [
                "-c",
                "mix compile && mix ecto.create && mix ecto.migrate && mix phx.server",
              ],
              "command": Array [
                "/bin/bash",
              ],
              "env": Array [
                Object {
                  "name": "MIX_ENV",
                  "value": "prod",
                },
                Object {
                  "name": "ECTO_USE_SSL",
                  "value": "'false'",
                },
                Object {
                  "name": "COIN",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_VARIANT",
                  "value": "geth",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_HTTP_URL",
                  "value": "",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_TRACE_URL",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_WS_URL",
                  "value": "",
                },
                Object {
                  "name": "DATABASE_URL",
                  "value": "postgresql://postgres:@localhost:5432/blockscout?ssl=false",
                },
              ],
              "image": "",
              "imagePullPolicy": "Always",
              "name": "node",
              "ports": Array [
                Object {
                  "containerPort": 80,
                },
              ],
              "readinessProbe": Object {
                "httpGet": Object {
                  "path": "/",
                  "port": 80,
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 2,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
              },
            },
            Object {
              "env": Array [
                Object {
                  "name": "POSTGRES_PASSWORD",
                  "value": "postgres",
                },
                Object {
                  "name": "POSTGRES_DB",
                  "value": "explorer_test",
                },
              ],
              "image": "postgres:13.6",
              "name": "postgres",
              "ports": Array [
                Object {
                  "containerPort": 5432,
                  "name": "postgres",
                },
              ],
              "readinessProbe": Object {
                "exec": Object {
                  "command": Array [
                    "pg_isready",
                    "-U",
                    "postgres",
                  ],
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 2,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
              },
            },
          ],
          "volumes": Array [
            Object {
              "configMap": Object {
                "name": "test-geth-cm-c84725b6",
              },
              "name": "test-geth-cm-c84725b6",
            },
          ],
        },
      },
    },
  },
]
`;

exports[`E2E mode E2E mode 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "type": "blockscout-e2e-test",
      },
      "name": "",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "service",
      "namespace": "",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 80,
          "targetPort": 80,
        },
      ],
      "selector": Object {
        "app": "blockscout-e2e",
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "genesis.json": "{
                    \\"config\\": {
                      \\"chainId\\": 1337,
                      \\"homesteadBlock\\": 0,
                      \\"eip150Block\\": 0,
                      \\"eip155Block\\": 0,
                      \\"eip158Block\\": 0,
                      \\"eip160Block\\": 0,
                      \\"byzantiumBlock\\": 0,
                      \\"constantinopleBlock\\": 0,
                      \\"petersburgBlock\\": 0,
                      \\"istanbulBlock\\": 0,
                      \\"muirGlacierBlock\\": 0,
                      \\"berlinBlock\\": 0,
                      \\"londonBlock\\": 0,
                      \\"clique\\":{
                        \\"blockperiodseconds\\": 1,
                        \\"epochlength\\":30000
                      }
                    },
                    \\"nonce\\": \\"0x0000000000000042\\",
                    \\"mixhash\\": \\"0x0000000000000000000000000000000000000000000000000000000000000000\\",
                    \\"difficulty\\": \\"1\\",
                    \\"coinbase\\": \\"0x3333333333333333333333333333333333333333\\",
                    \\"parentHash\\": \\"0x0000000000000000000000000000000000000000000000000000000000000000\\",
                    \\"extraData\\": \\"0x\\",
                    \\"gasLimit\\": \\"8000000000\\",
                    \\"alloc\\": {
                        \\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\\": { \\"balance\\": \\"20000000000000000000000\\" },
                        \\"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\\": { \\"balance\\": \\"20000000000000000000000\\" }
                    }
                  }",
      "init.sh": "#!/bin/bash
                echo \\"/root/.ethereum/keystore not found, running 'geth init'...\\"
                rm -rf /root/.ethereum/keystore
                echo ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 >> priv1.txt
                echo 59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d >> priv2.txt
                geth account import --keystore /root/.ethereum/devnet/keystore --password /root/password.txt ./priv1.txt
                geth account import --keystore /root/.ethereum/devnet/keystore --password /root/password.txt ./priv2.txt
                geth --datadir /root/.ethereum/devnet init /root/genesis.json
                echo \\"...done!\\"
            
                geth \\"$@\\"
                ",
      "password.txt": "",
    },
    "immutable": false,
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "test-geth-cm-c84725b6",
      "namespace": "",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "blockscout",
      },
      "name": "deployment",
      "namespace": "",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app": "blockscout-e2e",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "blockscout-e2e",
          },
          "name": "pod",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--fakepow",
                "--dev",
                "--dev.period",
                "1",
                "--datadir",
                "/root/.ethereum/devnet",
                "--keystore",
                "/root/.ethereum/devnet/keystore",
                "--password",
                "/root/password.txt",
                "--unlock",
                "0",
                "--unlock",
                "1",
                "--mine",
                "--miner.threads",
                "1",
                "--miner.etherbase",
                "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266",
                "--ipcpath",
                "/root/geth.ipc",
                "--http",
                "--http.vhosts",
                "*",
                "--http.addr",
                "0.0.0.0",
                "--http.port=8544",
                "--http.api",
                "eth,net,web3,debug,txpool",
                "--ws",
                "--ws.origins",
                "*",
                "--ws.addr",
                "0.0.0.0",
                "--ws.port=8546",
                "--ws.api",
                "eth,net,web3,debug,txpool",
                "--graphql",
                "--graphql.corsdomain",
                "*",
                "--allow-insecure-unlock",
                "--rpc.allow-unprotected-txs",
                "--http.corsdomain",
                "*",
                "--vmdebug",
                "--networkid=1337",
                "--rpc.txfeecap",
                "0",
              ],
              "command": Array [
                "sh",
                "./root/init.sh",
              ],
              "image": "ethereum/client-go:v1.10.18",
              "name": "geth",
              "ports": Array [
                Object {
                  "containerPort": 8544,
                  "name": "http",
                },
                Object {
                  "containerPort": 8546,
                  "name": "ws",
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "2Gi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "2Gi",
                },
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/root/init.sh",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "init.sh",
                },
                Object {
                  "mountPath": "/root/genesis.json",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "genesis.json",
                },
                Object {
                  "mountPath": "/root/password.txt",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "password.txt",
                },
              ],
            },
            Object {
              "args": Array [
                "-c",
                "mix compile && mix ecto.create && mix ecto.migrate && mix phx.server",
              ],
              "command": Array [
                "/bin/bash",
              ],
              "env": Array [
                Object {
                  "name": "MIX_ENV",
                  "value": "prod",
                },
                Object {
                  "name": "ECTO_USE_SSL",
                  "value": "'false'",
                },
                Object {
                  "name": "COIN",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_VARIANT",
                  "value": "geth",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_HTTP_URL",
                  "value": "",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_TRACE_URL",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_WS_URL",
                  "value": "",
                },
                Object {
                  "name": "DATABASE_URL",
                  "value": "postgresql://postgres:@localhost:5432/blockscout?ssl=false",
                },
              ],
              "image": "",
              "imagePullPolicy": "Always",
              "name": "node",
              "ports": Array [
                Object {
                  "containerPort": 80,
                },
              ],
              "readinessProbe": Object {
                "httpGet": Object {
                  "path": "/",
                  "port": 80,
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 2,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
              },
            },
            Object {
              "env": Array [
                Object {
                  "name": "POSTGRES_PASSWORD",
                  "value": "postgres",
                },
                Object {
                  "name": "POSTGRES_DB",
                  "value": "explorer_test",
                },
              ],
              "image": "postgres:13.6",
              "name": "postgres",
              "ports": Array [
                Object {
                  "containerPort": 5432,
                  "name": "postgres",
                },
              ],
              "readinessProbe": Object {
                "exec": Object {
                  "command": Array [
                    "pg_isready",
                    "-U",
                    "postgres",
                  ],
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 2,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
              },
            },
          ],
          "volumes": Array [
            Object {
              "configMap": Object {
                "name": "test-geth-cm-c84725b6",
              },
              "name": "test-geth-cm-c84725b6",
            },
          ],
        },
      },
    },
  },
]
`;

exports[`E2E mode Load mode 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "type": "blockscout-e2e-test",
      },
      "name": "",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "service",
      "namespace": "",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 80,
          "targetPort": 80,
        },
      ],
      "selector": Object {
        "app": "blockscout-e2e",
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "genesis.json": "{
                    \\"config\\": {
                      \\"chainId\\": 1337,
                      \\"homesteadBlock\\": 0,
                      \\"eip150Block\\": 0,
                      \\"eip155Block\\": 0,
                      \\"eip158Block\\": 0,
                      \\"eip160Block\\": 0,
                      \\"byzantiumBlock\\": 0,
                      \\"constantinopleBlock\\": 0,
                      \\"petersburgBlock\\": 0,
                      \\"istanbulBlock\\": 0,
                      \\"muirGlacierBlock\\": 0,
                      \\"berlinBlock\\": 0,
                      \\"londonBlock\\": 0,
                      \\"clique\\":{
                        \\"blockperiodseconds\\": 1,
                        \\"epochlength\\":30000
                      }
                    },
                    \\"nonce\\": \\"0x0000000000000042\\",
                    \\"mixhash\\": \\"0x0000000000000000000000000000000000000000000000000000000000000000\\",
                    \\"difficulty\\": \\"1\\",
                    \\"coinbase\\": \\"0x3333333333333333333333333333333333333333\\",
                    \\"parentHash\\": \\"0x0000000000000000000000000000000000000000000000000000000000000000\\",
                    \\"extraData\\": \\"0x\\",
                    \\"gasLimit\\": \\"8000000000\\",
                    \\"alloc\\": {
                        \\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\\": { \\"balance\\": \\"20000000000000000000000\\" },
                        \\"0x70997970C51812dc3A010C7d01b50e0d17dc79C8\\": { \\"balance\\": \\"20000000000000000000000\\" }
                    }
                  }",
      "init.sh": "#!/bin/bash
                echo \\"/root/.ethereum/keystore not found, running 'geth init'...\\"
                rm -rf /root/.ethereum/keystore
                echo ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 >> priv1.txt
                echo 59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d >> priv2.txt
                geth account import --keystore /root/.ethereum/devnet/keystore --password /root/password.txt ./priv1.txt
                geth account import --keystore /root/.ethereum/devnet/keystore --password /root/password.txt ./priv2.txt
                geth --datadir /root/.ethereum/devnet init /root/genesis.json
                echo \\"...done!\\"
            
                geth \\"$@\\"
                ",
      "password.txt": "",
    },
    "immutable": false,
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "test-geth-cm-c84725b6",
      "namespace": "",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "blockscout",
      },
      "name": "deployment",
      "namespace": "",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app": "blockscout-e2e",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "blockscout-e2e",
          },
          "name": "pod",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--fakepow",
                "--dev",
                "--dev.period",
                "1",
                "--datadir",
                "/root/.ethereum/devnet",
                "--keystore",
                "/root/.ethereum/devnet/keystore",
                "--password",
                "/root/password.txt",
                "--unlock",
                "0",
                "--unlock",
                "1",
                "--mine",
                "--miner.threads",
                "1",
                "--miner.etherbase",
                "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266",
                "--ipcpath",
                "/root/geth.ipc",
                "--http",
                "--http.vhosts",
                "*",
                "--http.addr",
                "0.0.0.0",
                "--http.port=8544",
                "--http.api",
                "eth,net,web3,debug,txpool",
                "--ws",
                "--ws.origins",
                "*",
                "--ws.addr",
                "0.0.0.0",
                "--ws.port=8546",
                "--ws.api",
                "eth,net,web3,debug,txpool",
                "--graphql",
                "--graphql.corsdomain",
                "*",
                "--allow-insecure-unlock",
                "--rpc.allow-unprotected-txs",
                "--http.corsdomain",
                "*",
                "--vmdebug",
                "--networkid=1337",
                "--rpc.txfeecap",
                "0",
              ],
              "command": Array [
                "sh",
                "./root/init.sh",
              ],
              "image": "ethereum/client-go:v1.10.18",
              "name": "geth",
              "ports": Array [
                Object {
                  "containerPort": 8544,
                  "name": "http",
                },
                Object {
                  "containerPort": 8546,
                  "name": "ws",
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "2Gi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "2Gi",
                },
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/root/init.sh",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "init.sh",
                },
                Object {
                  "mountPath": "/root/genesis.json",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "genesis.json",
                },
                Object {
                  "mountPath": "/root/password.txt",
                  "name": "test-geth-cm-c84725b6",
                  "subPath": "password.txt",
                },
              ],
            },
            Object {
              "args": Array [
                "-c",
                "mix compile && mix ecto.create && mix ecto.migrate && mix phx.server",
              ],
              "command": Array [
                "/bin/bash",
              ],
              "env": Array [
                Object {
                  "name": "MIX_ENV",
                  "value": "prod",
                },
                Object {
                  "name": "ECTO_USE_SSL",
                  "value": "'false'",
                },
                Object {
                  "name": "COIN",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_VARIANT",
                  "value": "geth",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_HTTP_URL",
                  "value": "",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_TRACE_URL",
                },
                Object {
                  "name": "ETHEREUM_JSONRPC_WS_URL",
                  "value": "",
                },
                Object {
                  "name": "DATABASE_URL",
                  "value": "postgresql://postgres:@localhost:5432/blockscout?ssl=false",
                },
              ],
              "image": "",
              "imagePullPolicy": "Always",
              "name": "node",
              "ports": Array [
                Object {
                  "containerPort": 80,
                },
              ],
              "readinessProbe": Object {
                "httpGet": Object {
                  "path": "/",
                  "port": 80,
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 2,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
              },
            },
            Object {
              "env": Array [
                Object {
                  "name": "POSTGRES_PASSWORD",
                  "value": "postgres",
                },
                Object {
                  "name": "POSTGRES_DB",
                  "value": "explorer_test",
                },
              ],
              "image": "postgres:13.6",
              "name": "postgres",
              "ports": Array [
                Object {
                  "containerPort": 5432,
                  "name": "postgres",
                },
              ],
              "readinessProbe": Object {
                "exec": Object {
                  "command": Array [
                    "pg_isready",
                    "-U",
                    "postgres",
                  ],
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 2,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "1024Mi",
                },
              },
            },
          ],
          "volumes": Array [
            Object {
              "configMap": Object {
                "name": "test-geth-cm-c84725b6",
              },
              "name": "test-geth-cm-c84725b6",
            },
          ],
        },
      },
    },
  },
]
`;
